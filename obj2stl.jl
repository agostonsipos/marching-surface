#!/usr/bin/julia

using LinearAlgebra

"""
    find_objects(prefix)

Finds all .obj files with the given prefix, e.g. `find_objects("/tmp/test")`.
"""
function find_objects(prefix)
    files = readdir(dirname(prefix))
    regex = Regex("^$(basename(prefix)).*\\.obj")
    map(s -> joinpath(dirname(prefix), s), filter(s -> match(regex, s) != nothing, files))
end

"""
    obj2stl(filenames, outfile)

Write all triangles in the file list `filenames`
into the file designated by the name `outfile`.

Assumes that the files contain triangles with only
`v` and `f` elements.
"""
function obj2stl(filenames, outfile)
    n = 0
    for filename in filenames
        open(filename) do f
            n += count(line -> split(line)[1] == "f", eachline(f))
        end
    end
    open(outfile, "w") do fout
        print(fout, "Generated by obj2stl" * repeat(' ', 60))
        write(fout, UInt32(n))
        for filename in filenames
            open(filename) do f
                v = []
                for line in eachline(f)
                    parts = split(line)
                    if parts[1] == "v"
                        p = map(s -> parse(Float64, s), parts[2:end])
                        push!(v, p)
                    elseif parts[1] == "f"
                        tri = map(s -> parse(Int, s), parts[2:end])
                        n = normalize!(cross(v[tri[2]] - v[tri[1]], v[tri[3]] - v[tri[1]]))
                        for j in 1:3
                            write(fout, Float32(n[j]))
                        end
                        for i in 1:3, j in 1:3
                            write(fout, Float32(v[tri[i]][j]))
                        end
                        write(fout, UInt16(0))
                    end
                end
            end
        end
    end
end

"""
    run(prefix)

Finds all .obj files with the given prefix, and converts them to an STL file,
so e.g. `run("/tmp/test")` reads `/tmp/test*.obj` and generates `/tmp/test.stl`.
"""
run(prefix) = obj2stl(find_objects(prefix), "$prefix.stl")

if length(ARGS) != 1
    println("Usage (from command line): obj2stl.jl <prefix>")
    println("Usage (from REPL): run(<prefix>)")
else
    run(ARGS[1])
end
